{"version":3,"file":"ldclient-common.es.js","sources":["../src/errors.js","../node_modules/base64-js/index.js","../node_modules/fast-deep-equal/index.js","../src/utils.js","../node_modules/uuid/lib/bytesToUuid.js","../node_modules/uuid/lib/rng-browser.js","../node_modules/uuid/v1.js","../src/EventSender.js","../src/EventSummarizer.js","../src/UserFilter.js","../src/messages.js","../src/EventEmitter.js","../src/Store.js","../src/Stream.js","../src/Requestor.js","../src/promiseCoalescer.js","../src/UserValidator.js","../src/configuration.js","../src/diagnosticEvents.js","../src/consoleLogger.js","../src/index.js","../src/EventProcessor.js","../src/Identity.js"],"sourcesContent":["function createCustomError(name) {\n  function CustomError(message, code) {\n    Error.captureStackTrace && Error.captureStackTrace(this, this.constructor);\n    this.message = message;\n    this.code = code;\n  }\n\n  CustomError.prototype = new Error();\n  CustomError.prototype.name = name;\n  CustomError.prototype.constructor = CustomError;\n\n  return CustomError;\n}\n\nexport const LDUnexpectedResponseError = createCustomError('LaunchDarklyUnexpectedResponseError');\nexport const LDInvalidEnvironmentIdError = createCustomError('LaunchDarklyInvalidEnvironmentIdError');\nexport const LDInvalidUserError = createCustomError('LaunchDarklyInvalidUserError');\nexport const LDInvalidEventKeyError = createCustomError('LaunchDarklyInvalidEventKeyError');\nexport const LDInvalidArgumentError = createCustomError('LaunchDarklyInvalidArgumentError');\nexport const LDFlagFetchError = createCustomError('LaunchDarklyFlagFetchError');\n\nexport function isHttpErrorRecoverable(status) {\n  if (status >= 400 && status < 500) {\n    return status === 400 || status === 408 || status === 429;\n  }\n  return true;\n}\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  for (var i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(\n      uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)\n    ))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","'use strict';\n\nvar isArray = Array.isArray;\nvar keyList = Object.keys;\nvar hasProp = Object.prototype.hasOwnProperty;\n\nmodule.exports = function equal(a, b) {\n  if (a === b) return true;\n\n  if (a && b && typeof a == 'object' && typeof b == 'object') {\n    var arrA = isArray(a)\n      , arrB = isArray(b)\n      , i\n      , length\n      , key;\n\n    if (arrA && arrB) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;)\n        if (!equal(a[i], b[i])) return false;\n      return true;\n    }\n\n    if (arrA != arrB) return false;\n\n    var dateA = a instanceof Date\n      , dateB = b instanceof Date;\n    if (dateA != dateB) return false;\n    if (dateA && dateB) return a.getTime() == b.getTime();\n\n    var regexpA = a instanceof RegExp\n      , regexpB = b instanceof RegExp;\n    if (regexpA != regexpB) return false;\n    if (regexpA && regexpB) return a.toString() == b.toString();\n\n    var keys = keyList(a);\n    length = keys.length;\n\n    if (length !== keyList(b).length)\n      return false;\n\n    for (i = length; i-- !== 0;)\n      if (!hasProp.call(b, keys[i])) return false;\n\n    for (i = length; i-- !== 0;) {\n      key = keys[i];\n      if (!equal(a[key], b[key])) return false;\n    }\n\n    return true;\n  }\n\n  return a!==a && b!==b;\n};\n","import * as base64 from 'base64-js';\nimport fastDeepEqual from 'fast-deep-equal';\n\nconst userAttrsToStringify = ['key', 'secondary', 'ip', 'country', 'email', 'firstName', 'lastName', 'avatar', 'name'];\n\n// See http://ecmanaut.blogspot.com/2006/07/encoding-decoding-utf8-in-javascript.html\nexport function btoa(s) {\n  const escaped = unescape(encodeURIComponent(s));\n  return base64.fromByteArray(stringToBytes(escaped));\n}\n\nfunction stringToBytes(s) {\n  const b = [];\n  for (let i = 0; i < s.length; i++) {\n    b.push(s.charCodeAt(i));\n  }\n  return b;\n}\n\nexport function base64URLEncode(s) {\n  return (\n    btoa(s)\n      // eslint-disable-next-line\n      .replace(/=/g, '')\n      .replace(/\\+/g, '-')\n      .replace(/\\//g, '_')\n  );\n}\n\nexport function clone(obj) {\n  return JSON.parse(JSON.stringify(obj));\n}\n\nexport function deepEquals(a, b) {\n  return fastDeepEqual(a, b);\n}\n\n// Events emitted in LDClient's initialize method will happen before the consumer\n// can register a listener, so defer them to next tick.\nexport function onNextTick(cb) {\n  setTimeout(cb, 0);\n}\n\n/**\n * Wrap a promise to invoke an optional callback upon resolution or rejection.\n *\n * This function assumes the callback follows the Node.js callback type: (err, value) => void\n *\n * If a callback is provided:\n *   - if the promise is resolved, invoke the callback with (null, value)\n *   - if the promise is rejected, invoke the callback with (error, null)\n *\n * @param {Promise<any>} promise\n * @param {Function} callback\n * @returns Promise<any> | undefined\n */\nexport function wrapPromiseCallback(promise, callback) {\n  const ret = promise.then(\n    value => {\n      if (callback) {\n        setTimeout(() => {\n          callback(null, value);\n        }, 0);\n      }\n      return value;\n    },\n    error => {\n      if (callback) {\n        setTimeout(() => {\n          callback(error, null);\n        }, 0);\n      } else {\n        return Promise.reject(error);\n      }\n    }\n  );\n\n  return !callback ? ret : undefined;\n}\n\n/**\n * Takes a map of flag keys to values, and returns the more verbose structure used by the\n * client stream.\n */\nexport function transformValuesToVersionedValues(flags) {\n  const ret = {};\n  for (const key in flags) {\n    if (flags.hasOwnProperty(key)) {\n      ret[key] = { value: flags[key], version: 0 };\n    }\n  }\n  return ret;\n}\n\n/**\n * Converts the internal flag state map to a simple map of flag keys to values.\n */\nexport function transformVersionedValuesToValues(flagsState) {\n  const ret = {};\n  for (const key in flagsState) {\n    if (flagsState.hasOwnProperty(key)) {\n      ret[key] = flagsState[key].value;\n    }\n  }\n  return ret;\n}\n\n/**\n * Returns an array of event groups each of which can be safely URL-encoded\n * without hitting the safe maximum URL length of certain browsers.\n *\n * @param {number} maxLength maximum URL length targeted\n * @param {Array[Object}]} events queue of events to divide\n * @returns Array[Array[Object]]\n */\nexport function chunkUserEventsForUrl(maxLength, events) {\n  const allEvents = events.slice(0);\n  const allChunks = [];\n  let remainingSpace = maxLength;\n  let chunk;\n\n  while (allEvents.length > 0) {\n    chunk = [];\n\n    while (remainingSpace > 0) {\n      const event = allEvents.shift();\n      if (!event) {\n        break;\n      }\n      remainingSpace = remainingSpace - base64URLEncode(JSON.stringify(event)).length;\n      // If we are over the max size, put this one back on the queue\n      // to try in the next round, unless this event alone is larger\n      // than the limit, in which case, screw it, and try it anyway.\n      if (remainingSpace < 0 && chunk.length > 0) {\n        allEvents.unshift(event);\n      } else {\n        chunk.push(event);\n      }\n    }\n\n    remainingSpace = maxLength;\n    allChunks.push(chunk);\n  }\n\n  return allChunks;\n}\n\nexport function getLDUserAgentString(platform) {\n  const version = platform.version || VERSION;\n  return platform.userAgent + '/' + version;\n}\n\nexport function getLDHeaders(platform, options) {\n  if (options && !options.sendLDHeaders) {\n    return {};\n  }\n  const h = {\n    'X-LaunchDarkly-User-Agent': getLDUserAgentString(platform),\n  };\n  if (options && options.wrapperName) {\n    h['X-LaunchDarkly-Wrapper'] = options.wrapperVersion\n      ? options.wrapperName + '/' + options.wrapperVersion\n      : options.wrapperName;\n  }\n  return h;\n}\n\nexport function extend(...objects) {\n  return objects.reduce((acc, obj) => ({ ...acc, ...obj }), {});\n}\n\nexport function sanitizeUser(user) {\n  if (!user) {\n    return user;\n  }\n  let newUser;\n  for (const i in userAttrsToStringify) {\n    const attr = userAttrsToStringify[i];\n    const value = user[attr];\n    if (value !== undefined && typeof value !== 'string') {\n      newUser = newUser || { ...user };\n      newUser[attr] = String(value);\n    }\n  }\n  return newUser || user;\n}\n","/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\nvar byteToHex = [];\nfor (var i = 0; i < 256; ++i) {\n  byteToHex[i] = (i + 0x100).toString(16).substr(1);\n}\n\nfunction bytesToUuid(buf, offset) {\n  var i = offset || 0;\n  var bth = byteToHex;\n  // join used to fix memory issue caused by concatenation: https://bugs.chromium.org/p/v8/issues/detail?id=3175#c4\n  return ([bth[buf[i++]], bth[buf[i++]], \n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]],\n\tbth[buf[i++]], bth[buf[i++]],\n\tbth[buf[i++]], bth[buf[i++]]]).join('');\n}\n\nmodule.exports = bytesToUuid;\n","// Unique ID creation requires a high quality random # generator.  In the\n// browser this is a little complicated due to unknown quality of Math.random()\n// and inconsistent support for the `crypto` API.  We do the best we can via\n// feature-detection\n\n// getRandomValues needs to be invoked in a context where \"this\" is a Crypto\n// implementation. Also, find the complete implementation of crypto on IE11.\nvar getRandomValues = (typeof(crypto) != 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto)) ||\n                      (typeof(msCrypto) != 'undefined' && typeof window.msCrypto.getRandomValues == 'function' && msCrypto.getRandomValues.bind(msCrypto));\n\nif (getRandomValues) {\n  // WHATWG crypto RNG - http://wiki.whatwg.org/wiki/Crypto\n  var rnds8 = new Uint8Array(16); // eslint-disable-line no-undef\n\n  module.exports = function whatwgRNG() {\n    getRandomValues(rnds8);\n    return rnds8;\n  };\n} else {\n  // Math.random()-based (RNG)\n  //\n  // If all else fails, use Math.random().  It's fast, but is of unspecified\n  // quality.\n  var rnds = new Array(16);\n\n  module.exports = function mathRNG() {\n    for (var i = 0, r; i < 16; i++) {\n      if ((i & 0x03) === 0) r = Math.random() * 0x100000000;\n      rnds[i] = r >>> ((i & 0x03) << 3) & 0xff;\n    }\n\n    return rnds;\n  };\n}\n","var rng = require('./lib/rng');\nvar bytesToUuid = require('./lib/bytesToUuid');\n\n// **`v1()` - Generate time-based UUID**\n//\n// Inspired by https://github.com/LiosK/UUID.js\n// and http://docs.python.org/library/uuid.html\n\nvar _nodeId;\nvar _clockseq;\n\n// Previous uuid creation time\nvar _lastMSecs = 0;\nvar _lastNSecs = 0;\n\n// See https://github.com/broofa/node-uuid for API details\nfunction v1(options, buf, offset) {\n  var i = buf && offset || 0;\n  var b = buf || [];\n\n  options = options || {};\n  var node = options.node || _nodeId;\n  var clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq;\n\n  // node and clockseq need to be initialized to random values if they're not\n  // specified.  We do this lazily to minimize issues related to insufficient\n  // system entropy.  See #189\n  if (node == null || clockseq == null) {\n    var seedBytes = rng();\n    if (node == null) {\n      // Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)\n      node = _nodeId = [\n        seedBytes[0] | 0x01,\n        seedBytes[1], seedBytes[2], seedBytes[3], seedBytes[4], seedBytes[5]\n      ];\n    }\n    if (clockseq == null) {\n      // Per 4.2.2, randomize (14 bit) clockseq\n      clockseq = _clockseq = (seedBytes[6] << 8 | seedBytes[7]) & 0x3fff;\n    }\n  }\n\n  // UUID timestamps are 100 nano-second units since the Gregorian epoch,\n  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so\n  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n  var msecs = options.msecs !== undefined ? options.msecs : new Date().getTime();\n\n  // Per 4.2.1.2, use count of uuid's generated during the current clock\n  // cycle to simulate higher resolution clock\n  var nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1;\n\n  // Time since last uuid creation (in msecs)\n  var dt = (msecs - _lastMSecs) + (nsecs - _lastNSecs)/10000;\n\n  // Per 4.2.1.2, Bump clockseq on clock regression\n  if (dt < 0 && options.clockseq === undefined) {\n    clockseq = clockseq + 1 & 0x3fff;\n  }\n\n  // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n  // time interval\n  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {\n    nsecs = 0;\n  }\n\n  // Per 4.2.1.2 Throw error if too many uuids are requested\n  if (nsecs >= 10000) {\n    throw new Error('uuid.v1(): Can\\'t create more than 10M uuids/sec');\n  }\n\n  _lastMSecs = msecs;\n  _lastNSecs = nsecs;\n  _clockseq = clockseq;\n\n  // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n  msecs += 12219292800000;\n\n  // `time_low`\n  var tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n  b[i++] = tl >>> 24 & 0xff;\n  b[i++] = tl >>> 16 & 0xff;\n  b[i++] = tl >>> 8 & 0xff;\n  b[i++] = tl & 0xff;\n\n  // `time_mid`\n  var tmh = (msecs / 0x100000000 * 10000) & 0xfffffff;\n  b[i++] = tmh >>> 8 & 0xff;\n  b[i++] = tmh & 0xff;\n\n  // `time_high_and_version`\n  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\n  b[i++] = tmh >>> 16 & 0xff;\n\n  // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n  b[i++] = clockseq >>> 8 | 0x80;\n\n  // `clock_seq_low`\n  b[i++] = clockseq & 0xff;\n\n  // `node`\n  for (var n = 0; n < 6; ++n) {\n    b[i + n] = node[n];\n  }\n\n  return buf ? buf : bytesToUuid(b);\n}\n\nmodule.exports = v1;\n","import * as errors from './errors';\nimport * as utils from './utils';\nimport uuidv1 from 'uuid/v1';\n\nconst MAX_URL_LENGTH = 2000;\n\nexport default function EventSender(platform, environmentId, options) {\n  const imageUrlPath = '/a/' + environmentId + '.gif';\n  const baseHeaders = utils.extend({ 'Content-Type': 'application/json' }, utils.getLDHeaders(platform, options));\n  const httpFallbackPing = platform.httpFallbackPing; // this will be set for us if we're in the browser SDK\n  const sender = {};\n\n  function getResponseInfo(result) {\n    const ret = { status: result.status };\n    const dateStr = result.header('date');\n    if (dateStr) {\n      const time = Date.parse(dateStr);\n      if (time) {\n        ret.serverTime = time;\n      }\n    }\n    return ret;\n  }\n\n  sender.sendChunk = (events, url, isDiagnostic, usePost) => {\n    const jsonBody = JSON.stringify(events);\n    const payloadId = isDiagnostic ? null : uuidv1();\n\n    function doPostRequest(canRetry) {\n      const headers = isDiagnostic\n        ? baseHeaders\n        : utils.extend({}, baseHeaders, {\n            'X-LaunchDarkly-Event-Schema': '3',\n            'X-LaunchDarkly-Payload-ID': payloadId,\n          });\n      return platform\n        .httpRequest('POST', url, headers, jsonBody)\n        .promise.then(result => {\n          if (!result) {\n            // This was a response from a fire-and-forget request, so we won't have a status.\n            return;\n          }\n          if (result.status >= 400 && errors.isHttpErrorRecoverable(result.status) && canRetry) {\n            return doPostRequest(false);\n          } else {\n            return getResponseInfo(result);\n          }\n        })\n        .catch(() => {\n          if (canRetry) {\n            return doPostRequest(false);\n          }\n          return Promise.reject();\n        });\n    }\n\n    if (usePost) {\n      return doPostRequest(true).catch(() => {});\n    } else {\n      httpFallbackPing && httpFallbackPing(url + imageUrlPath + '?d=' + utils.base64URLEncode(jsonBody));\n      return Promise.resolve(); // we don't wait for this request to complete, it's just a one-way ping\n    }\n  };\n\n  sender.sendEvents = function(events, url, isDiagnostic) {\n    if (!platform.httpRequest) {\n      return Promise.resolve();\n    }\n    const canPost = platform.httpAllowsPost();\n    let chunks;\n    if (canPost) {\n      // no need to break up events into chunks if we can send a POST\n      chunks = [events];\n    } else {\n      chunks = utils.chunkUserEventsForUrl(MAX_URL_LENGTH - url.length, events);\n    }\n    const results = [];\n    for (let i = 0; i < chunks.length; i++) {\n      results.push(sender.sendChunk(chunks[i], url, isDiagnostic, canPost));\n    }\n    return Promise.all(results);\n  };\n\n  return sender;\n}\n","export default function EventSummarizer() {\n  const es = {};\n\n  let startDate = 0,\n    endDate = 0,\n    counters = {};\n\n  es.summarizeEvent = function(event) {\n    if (event.kind === 'feature') {\n      const counterKey =\n        event.key +\n        ':' +\n        (event.variation !== null && event.variation !== undefined ? event.variation : '') +\n        ':' +\n        (event.version !== null && event.version !== undefined ? event.version : '');\n      const counterVal = counters[counterKey];\n      if (counterVal) {\n        counterVal.count = counterVal.count + 1;\n      } else {\n        counters[counterKey] = {\n          count: 1,\n          key: event.key,\n          variation: event.variation,\n          version: event.version,\n          value: event.value,\n          default: event.default,\n        };\n      }\n      if (startDate === 0 || event.creationDate < startDate) {\n        startDate = event.creationDate;\n      }\n      if (event.creationDate > endDate) {\n        endDate = event.creationDate;\n      }\n    }\n  };\n\n  es.getSummary = function() {\n    const flagsOut = {};\n    let empty = true;\n    for (const i in counters) {\n      const c = counters[i];\n      let flag = flagsOut[c.key];\n      if (!flag) {\n        flag = {\n          default: c.default,\n          counters: [],\n        };\n        flagsOut[c.key] = flag;\n      }\n      const counterOut = {\n        value: c.value,\n        count: c.count,\n      };\n      if (c.variation !== undefined && c.variation !== null) {\n        counterOut.variation = c.variation;\n      }\n      if (c.version) {\n        counterOut.version = c.version;\n      } else {\n        counterOut.unknown = true;\n      }\n      flag.counters.push(counterOut);\n      empty = false;\n    }\n    return empty\n      ? null\n      : {\n          startDate,\n          endDate,\n          features: flagsOut,\n        };\n  };\n\n  es.clearSummary = function() {\n    startDate = 0;\n    endDate = 0;\n    counters = {};\n  };\n\n  return es;\n}\n","import * as utils from './utils';\n\n/**\n * The UserFilter object transforms user objects into objects suitable to be sent as JSON to\n * the server, hiding any private user attributes.\n *\n * @param {Object} the LaunchDarkly client configuration object\n **/\nexport default function UserFilter(config) {\n  const filter = {};\n  const allAttributesPrivate = config.allAttributesPrivate;\n  const privateAttributeNames = config.privateAttributeNames || [];\n  const ignoreAttrs = { key: true, custom: true, anonymous: true };\n  const allowedTopLevelAttrs = {\n    key: true,\n    secondary: true,\n    ip: true,\n    country: true,\n    email: true,\n    firstName: true,\n    lastName: true,\n    avatar: true,\n    name: true,\n    anonymous: true,\n    custom: true,\n  };\n\n  filter.filterUser = function(user) {\n    if (!user) {\n      return null;\n    }\n    const userPrivateAttrs = user.privateAttributeNames || [];\n\n    const isPrivateAttr = function(name) {\n      return (\n        !ignoreAttrs[name] &&\n        (allAttributesPrivate || userPrivateAttrs.indexOf(name) !== -1 || privateAttributeNames.indexOf(name) !== -1)\n      );\n    };\n    const filterAttrs = function(props, isAttributeAllowed) {\n      return Object.keys(props).reduce(\n        (acc, name) => {\n          const ret = acc;\n          if (isAttributeAllowed(name)) {\n            if (isPrivateAttr(name)) {\n              // add to hidden list\n              ret[1][name] = true;\n            } else {\n              ret[0][name] = props[name];\n            }\n          }\n          return ret;\n        },\n        [{}, {}]\n      );\n    };\n    const result = filterAttrs(user, key => allowedTopLevelAttrs[key]);\n    const filteredProps = result[0];\n    let removedAttrs = result[1];\n    if (user.custom) {\n      const customResult = filterAttrs(user.custom, () => true);\n      filteredProps.custom = customResult[0];\n      removedAttrs = utils.extend({}, removedAttrs, customResult[1]);\n    }\n    const removedAttrNames = Object.keys(removedAttrs);\n    if (removedAttrNames.length) {\n      removedAttrNames.sort();\n      filteredProps.privateAttrs = removedAttrNames;\n    }\n    return filteredProps;\n  };\n  return filter;\n}\n","import * as errors from './errors';\n\nfunction errorString(err) {\n  if (err && err.message) {\n    return err.message;\n  }\n  if (typeof err === 'string' || err instanceof String) {\n    return err;\n  }\n  return JSON.stringify(err);\n}\n\nexport const clientInitialized = function() {\n  return 'LaunchDarkly client initialized';\n};\n\nconst docLink =\n  ' Please see https://docs.launchdarkly.com/docs/js-sdk-reference#section-initializing-the-client for instructions on SDK initialization.';\n\nexport const clientNotReady = function() {\n  return 'LaunchDarkly client is not ready';\n};\n\nexport const eventCapacityExceeded = function() {\n  return 'Exceeded event queue capacity. Increase capacity to avoid dropping events.';\n};\n\nexport const eventWithoutUser = function() {\n  return 'Be sure to call `identify` in the LaunchDarkly client: https://docs.launchdarkly.com/docs/js-sdk-reference#section-analytics-events';\n};\n\nexport const invalidContentType = function(contentType) {\n  return 'Expected application/json content type but got \"' + contentType + '\"';\n};\n\nexport const invalidKey = function() {\n  return 'Event key must be a string';\n};\n\nexport const localStorageUnavailable = function() {\n  return 'localStorage is unavailable';\n};\n\nexport const localStorageUnavailableForUserId = function() {\n  return 'localStorage is unavailable, so anonymous user ID cannot be cached';\n};\n\nexport const networkError = e => 'network error' + (e ? ' (' + e + ')' : '');\n\nexport const unknownCustomEventKey = function(key) {\n  return 'Custom event \"' + key + '\" does not exist';\n};\n\nexport const environmentNotFound = function() {\n  return 'Environment not found. Double check that you specified a valid environment/client-side ID.' + docLink;\n};\n\nexport const environmentNotSpecified = function() {\n  return 'No environment/client-side ID was specified.' + docLink;\n};\n\nexport const errorFetchingFlags = function(err) {\n  return 'Error fetching flag settings: ' + errorString(err);\n};\n\nexport const userNotSpecified = function() {\n  return 'No user specified.' + docLink;\n};\n\nexport const invalidUser = function() {\n  return 'Invalid user specified.' + docLink;\n};\n\nexport const bootstrapOldFormat = function() {\n  return (\n    'LaunchDarkly client was initialized with bootstrap data that did not include flag metadata. ' +\n    'Events may not be sent correctly.' +\n    docLink\n  );\n};\n\nexport const bootstrapInvalid = function() {\n  return 'LaunchDarkly bootstrap data is not available because the back end could not read the flags.';\n};\n\nexport const deprecated = function(oldName, newName) {\n  if (newName) {\n    return '\"' + oldName + '\" is deprecated, please use \"' + newName + '\"';\n  }\n  return '\"' + oldName + '\" is deprecated';\n};\n\nexport const httpErrorMessage = function(status, context, retryMessage) {\n  return (\n    'Received error ' +\n    status +\n    (status === 401 ? ' (invalid SDK key)' : '') +\n    ' for ' +\n    context +\n    ' - ' +\n    (errors.isHttpErrorRecoverable(status) ? retryMessage : 'giving up permanently')\n  );\n};\n\nexport const httpUnavailable = function() {\n  return 'Cannot make HTTP requests in this environment.' + docLink;\n};\n\nexport const identifyDisabled = function() {\n  return 'identify() has no effect here; it must be called on the main client instance';\n};\n\nexport const streamClosing = function() {\n  return 'Closing stream connection';\n};\n\nexport const streamConnecting = function(url) {\n  return 'Opening stream connection to ' + url;\n};\n\nexport const streamError = function(err, streamReconnectDelay) {\n  return (\n    'Error on stream connection: ' +\n    errorString(err) +\n    ', will continue retrying every ' +\n    streamReconnectDelay +\n    ' milliseconds.'\n  );\n};\n\nexport const unknownOption = name => 'Ignoring unknown config option \"' + name + '\"';\n\nexport const wrongOptionType = (name, expectedType, actualType) =>\n  'Config option \"' + name + '\" should be of type ' + expectedType + ', got ' + actualType + ', using default value';\n\nexport const wrongOptionTypeBoolean = (name, actualType) =>\n  'Config option \"' + name + '\" should be a boolean, got ' + actualType + ', converting to boolean';\n\nexport const optionBelowMinimum = (name, value, minimum) =>\n  'Config option \"' + name + '\" was set to ' + value + ', changing to minimum value of ' + minimum;\n\nexport const debugPolling = function(url) {\n  return 'polling for feature flags at ' + url;\n};\n\nexport const debugStreamPing = function() {\n  return 'received ping message from stream';\n};\n\nexport const debugStreamPut = function() {\n  return 'received streaming update for all flags';\n};\n\nexport const debugStreamPatch = function(key) {\n  return 'received streaming update for flag \"' + key + '\"';\n};\n\nexport const debugStreamPatchIgnored = function(key) {\n  return 'received streaming update for flag \"' + key + '\" but ignored due to version check';\n};\n\nexport const debugStreamDelete = function(key) {\n  return 'received streaming deletion for flag \"' + key + '\"';\n};\n\nexport const debugStreamDeleteIgnored = function(key) {\n  return 'received streaming deletion for flag \"' + key + '\" but ignored due to version check';\n};\n\nexport const debugEnqueueingEvent = function(kind) {\n  return 'enqueueing \"' + kind + '\" event';\n};\n\nexport const debugPostingEvents = function(count) {\n  return 'sending ' + count + ' events';\n};\n\nexport const debugPostingDiagnosticEvent = function(event) {\n  return 'sending diagnostic event (' + event.kind + ')';\n};\n","export default function EventEmitter(logger) {\n  const emitter = {};\n  const events = {};\n\n  const listeningTo = event => !!events[event];\n\n  emitter.on = function(event, handler, context) {\n    events[event] = events[event] || [];\n    events[event] = events[event].concat({\n      handler: handler,\n      context: context,\n    });\n  };\n\n  emitter.off = function(event, handler, context) {\n    if (!events[event]) {\n      return;\n    }\n    for (let i = 0; i < events[event].length; i++) {\n      if (events[event][i].handler === handler && events[event][i].context === context) {\n        events[event] = events[event].slice(0, i).concat(events[event].slice(i + 1));\n      }\n    }\n  };\n\n  emitter.emit = function(event) {\n    if (!events[event]) {\n      return;\n    }\n    for (let i = 0; i < events[event].length; i++) {\n      events[event][i].handler.apply(events[event][i].context, Array.prototype.slice.call(arguments, 1));\n    }\n  };\n\n  emitter.getEvents = function() {\n    return Object.keys(events);\n  };\n\n  emitter.getEventListenerCount = function(event) {\n    return events[event] ? events[event].length : 0;\n  };\n\n  emitter.maybeReportError = function(error) {\n    if (!error) {\n      return;\n    }\n    if (listeningTo('error')) {\n      this.emit('error', error);\n    } else {\n      (logger || console).error(error.message);\n    }\n  };\n  return emitter;\n}\n","import * as messages from './messages';\nimport * as utils from './utils';\n\n// The localStorageProvider is provided by the platform object. It should have the following\n// methods, each of which should return a Promise:\n// - get(key): Gets the string value, if any, for the given key\n// - set(key, value): Stores a string value for the given key\n// - remove(key): Removes the given key\nexport default function Store(localStorageProvider, environment, hash, ident, logger) {\n  const store = {};\n\n  function getFlagsKey() {\n    let key = '';\n    const user = ident.getUser();\n    if (user) {\n      key = hash || utils.btoa(JSON.stringify(user));\n    }\n    return 'ld:' + environment + ':' + key;\n  }\n\n  // Returns a Promise which will be resolved with a parsed JSON value if a stored value was available,\n  // resolved with null if there was no value, or rejected if storage was not available.\n  store.loadFlags = () =>\n    localStorageProvider\n      .get(getFlagsKey())\n      .then(dataStr => {\n        if (dataStr === null || dataStr === undefined) {\n          return null;\n        }\n        try {\n          let data = JSON.parse(dataStr);\n          if (data) {\n            const schema = data.$schema;\n            if (schema === undefined || schema < 1) {\n              data = utils.transformValuesToVersionedValues(data);\n            } else {\n              delete data['$schema'];\n            }\n          }\n          return data;\n        } catch (ex) {\n          return store.clearFlags().then(() => Promise.reject(ex));\n        }\n      })\n      .catch(err => {\n        logger.warn(messages.localStorageUnavailable());\n        return Promise.reject(err);\n      });\n\n  // Returns a Promise which will be resolved with no value if successful, or rejected if storage\n  // was not available.\n  store.saveFlags = flags => {\n    const data = utils.extend({}, flags, { $schema: 1 });\n    return localStorageProvider.set(getFlagsKey(), JSON.stringify(data)).catch(err => {\n      logger.warn(messages.localStorageUnavailable());\n      return Promise.reject(err);\n    });\n  };\n\n  // Returns a Promise which will be resolved with no value if successful, or rejected if storage\n  // was not available.\n  store.clearFlags = () =>\n    localStorageProvider.clear(getFlagsKey()).catch(err => {\n      logger.warn(messages.localStorageUnavailable());\n      return Promise.reject(err);\n    });\n\n  return store;\n}\n","import * as messages from './messages';\nimport { base64URLEncode, getLDHeaders } from './utils';\n\n// The underlying event source implementation is abstracted via the platform object, which should\n// have these three properties:\n// eventSourceFactory(): a function that takes a URL and optional request body and returns an object\n//   with the same methods as the regular HTML5 EventSource object. Passing a body parameter means\n//   that the request should use REPORT instead of GET.\n// eventSourceIsActive(): a function that takes an EventSource-compatible object and returns true if\n//   it is in an active state (connected or connecting).\n// eventSourceAllowsReport: true if REPORT is supported.\n\nexport default function Stream(platform, config, environment, diagnosticsAccumulator) {\n  const baseUrl = config.streamUrl;\n  const logger = config.logger;\n  const stream = {};\n  const evalUrlPrefix = baseUrl + '/eval/' + environment;\n  const useReport = config.useReport;\n  const withReasons = config.evaluationReasons;\n  const streamReconnectDelay = config.streamReconnectDelay;\n  const headers = getLDHeaders(platform, config);\n  let firstConnectionErrorLogged = false;\n  let es = null;\n  let reconnectTimeoutReference = null;\n  let connectionAttemptStartTime;\n  let user = null;\n  let hash = null;\n  let handlers = null;\n\n  stream.connect = function(newUser, newHash, newHandlers) {\n    user = newUser;\n    hash = newHash;\n    handlers = {};\n    for (const key in newHandlers || {}) {\n      handlers[key] = function(e) {\n        // Reset the state for logging the first connection error so that the first\n        // connection error following a successful connection will once again be logged.\n        // We will decorate *all* handlers to do this to keep this abstraction agnostic\n        // for different stream implementations.\n        firstConnectionErrorLogged = false;\n        logConnectionResult(true);\n        newHandlers[key] && newHandlers[key](e);\n      };\n    }\n    tryConnect();\n  };\n\n  stream.disconnect = function() {\n    clearTimeout(reconnectTimeoutReference);\n    reconnectTimeoutReference = null;\n    closeConnection();\n  };\n\n  stream.isConnected = function() {\n    return !!(es && platform.eventSourceIsActive && platform.eventSourceIsActive(es));\n  };\n\n  function handleError(err) {\n    if (!firstConnectionErrorLogged) {\n      logger.warn(messages.streamError(err, streamReconnectDelay));\n      firstConnectionErrorLogged = true;\n    }\n    logConnectionResult(false);\n    closeConnection();\n    tryConnect(streamReconnectDelay);\n  }\n\n  function tryConnect(delay) {\n    if (!reconnectTimeoutReference) {\n      if (delay) {\n        reconnectTimeoutReference = setTimeout(openConnection, delay);\n      } else {\n        openConnection();\n      }\n    }\n  }\n\n  function openConnection() {\n    reconnectTimeoutReference = null;\n    let url;\n    let query = '';\n    const options = { headers };\n    if (platform.eventSourceFactory) {\n      if (hash !== null && hash !== undefined) {\n        query = 'h=' + hash;\n      }\n      if (useReport) {\n        if (platform.eventSourceAllowsReport) {\n          url = evalUrlPrefix;\n          options.method = 'REPORT';\n          options.headers['Content-Type'] = 'application/json';\n          options.body = JSON.stringify(user);\n        } else {\n          // if we can't do REPORT, fall back to the old ping-based stream\n          url = baseUrl + '/ping/' + environment;\n          query = '';\n        }\n      } else {\n        url = evalUrlPrefix + '/' + base64URLEncode(JSON.stringify(user));\n      }\n      if (withReasons) {\n        query = query + (query ? '&' : '') + 'withReasons=true';\n      }\n      url = url + (query ? '?' : '') + query;\n\n      closeConnection();\n      logger.info(messages.streamConnecting(url));\n      logConnectionStarted();\n\n      es = platform.eventSourceFactory(url, options);\n      for (const key in handlers) {\n        if (handlers.hasOwnProperty(key)) {\n          es.addEventListener(key, handlers[key]);\n        }\n      }\n\n      es.onerror = handleError;\n    }\n  }\n\n  function closeConnection() {\n    if (es) {\n      logger.info(messages.streamClosing());\n      es.close();\n      es = null;\n    }\n  }\n\n  function logConnectionStarted() {\n    connectionAttemptStartTime = new Date().getTime();\n  }\n\n  function logConnectionResult(success) {\n    if (connectionAttemptStartTime && diagnosticsAccumulator) {\n      diagnosticsAccumulator.recordStreamInit(\n        connectionAttemptStartTime,\n        !success,\n        new Date().getTime() - connectionAttemptStartTime\n      );\n    }\n    connectionAttemptStartTime = null;\n  }\n\n  return stream;\n}\n","import * as utils from './utils';\nimport * as errors from './errors';\nimport * as messages from './messages';\nimport promiseCoalescer from './promiseCoalescer';\n\nconst json = 'application/json';\n\nfunction getResponseError(result) {\n  if (result.status === 404) {\n    return new errors.LDInvalidEnvironmentIdError(messages.environmentNotFound());\n  } else {\n    return new errors.LDFlagFetchError(messages.errorFetchingFlags(result.statusText || String(result.status)));\n  }\n}\n\nexport default function Requestor(platform, options, environment) {\n  const baseUrl = options.baseUrl;\n  const useReport = options.useReport;\n  const withReasons = options.evaluationReasons;\n  const logger = options.logger;\n\n  const requestor = {};\n\n  const activeRequests = {}; // map of URLs to promiseCoalescers\n\n  function fetchJSON(endpoint, body) {\n    if (!platform.httpRequest) {\n      return new Promise((resolve, reject) => {\n        reject(new errors.LDFlagFetchError(messages.httpUnavailable()));\n      });\n    }\n\n    const method = body ? 'REPORT' : 'GET';\n    const headers = utils.getLDHeaders(platform, options);\n    if (body) {\n      headers['Content-Type'] = 'application/json';\n    }\n\n    let coalescer = activeRequests[endpoint];\n    if (!coalescer) {\n      coalescer = promiseCoalescer(() => {\n        // this will be called once there are no more active requests for the same endpoint\n        delete activeRequests[endpoint];\n      });\n      activeRequests[endpoint] = coalescer;\n    }\n\n    const req = platform.httpRequest(method, endpoint, headers, body);\n    const p = req.promise.then(\n      result => {\n        if (result.status === 200) {\n          if (result.header('content-type') && result.header('content-type').lastIndexOf(json) === 0) {\n            return JSON.parse(result.body);\n          } else {\n            const message = messages.invalidContentType(result.header('content-type') || '');\n            return Promise.reject(new errors.LDFlagFetchError(message));\n          }\n        } else {\n          return Promise.reject(getResponseError(result));\n        }\n      },\n      e => Promise.reject(new errors.LDFlagFetchError(messages.networkError(e)))\n    );\n    coalescer.addPromise(p, () => {\n      // this will be called if another request for the same endpoint supersedes this one\n      req.cancel && req.cancel();\n    });\n    return coalescer.resultPromise;\n  }\n\n  // Performs a GET request to an arbitrary path under baseUrl. Returns a Promise which will resolve\n  // with the parsed JSON response, or will be rejected if the request failed.\n  requestor.fetchJSON = function(path) {\n    return fetchJSON(baseUrl + path, null);\n  };\n\n  // Requests the current state of all flags for the given user from LaunchDarkly. Returns a Promise\n  // which will resolve with the parsed JSON response, or will be rejected if the request failed.\n  requestor.fetchFlagSettings = function(user, hash) {\n    let data;\n    let endpoint;\n    let query = '';\n    let body;\n\n    if (useReport) {\n      endpoint = [baseUrl, '/sdk/evalx/', environment, '/user'].join('');\n      body = JSON.stringify(user);\n    } else {\n      data = utils.base64URLEncode(JSON.stringify(user));\n      endpoint = [baseUrl, '/sdk/evalx/', environment, '/users/', data].join('');\n    }\n    if (hash) {\n      query = 'h=' + hash;\n    }\n    if (withReasons) {\n      query = query + (query ? '&' : '') + 'withReasons=true';\n    }\n    endpoint = endpoint + (query ? '?' : '') + query;\n    logger.debug(messages.debugPolling(endpoint));\n\n    return fetchJSON(endpoint, body);\n  };\n\n  return requestor;\n}\n","// This function allows a series of Promises to be coalesced such that only the most recently\n// added one actually matters. For instance, if several HTTP requests are made to the same\n// endpoint and we want to ensure that whoever made each one always gets the latest data, each\n// can be passed to addPromise (on the same coalescer) and each caller can wait on the\n// coalescer.resultPromise; all three will then receive the result (or error) from the *last*\n// request, and the results of the first two will be discarded.\n//\n// The cancelFn callback, if present, will be called whenever an existing promise is being\n// discarded. This can be used for instance to abort an HTTP request that's now obsolete.\n//\n// The finallyFn callback, if present, is called on completion of the whole thing. This is\n// different from calling coalescer.resultPromise.finally() because it is executed before any\n// other handlers. Its purpose is to tell the caller that this coalescer should no longer be used.\n\nexport default function promiseCoalescer(finallyFn) {\n  let currentPromise;\n  let currentCancelFn;\n  let finalResolve;\n  let finalReject;\n\n  const coalescer = {};\n\n  coalescer.addPromise = (p, cancelFn) => {\n    currentPromise = p;\n    currentCancelFn && currentCancelFn();\n    currentCancelFn = cancelFn;\n\n    p.then(\n      result => {\n        if (currentPromise === p) {\n          finalResolve(result);\n          finallyFn && finallyFn();\n        }\n      },\n      error => {\n        if (currentPromise === p) {\n          finalReject(error);\n          finallyFn && finallyFn();\n        }\n      }\n    );\n  };\n\n  coalescer.resultPromise = new Promise((resolve, reject) => {\n    finalResolve = resolve;\n    finalReject = reject;\n  });\n\n  return coalescer;\n}\n","import uuidv1 from 'uuid/v1';\n\nimport * as errors from './errors';\nimport * as messages from './messages';\nimport * as utils from './utils';\n\n// Transforms the user object if necessary to make sure it has a valid key.\n// 1. If a key is present, but is not a string, change it to a string.\n// 2. If no key is present, and \"anonymous\" is true, use a UUID as a key. This is cached in local\n// storage if possible.\n// 3. If there is no key (or no user object), return an error.\n\nconst ldUserIdKey = 'ld:$anonUserId';\n\nexport default function UserValidator(localStorageProvider, logger) {\n  function getCachedUserId() {\n    if (localStorageProvider) {\n      return localStorageProvider.get(ldUserIdKey).catch(() => null);\n      // Not logging errors here, because if local storage fails for the get, it will presumably fail for the set,\n      // so we will end up logging an error in setCachedUserId anyway.\n    }\n    return Promise.resolve(null);\n  }\n\n  function setCachedUserId(id) {\n    if (localStorageProvider) {\n      return localStorageProvider.set(ldUserIdKey, id).catch(() => {\n        logger.warn(messages.localStorageUnavailableForUserId());\n      });\n    }\n    return Promise.resolve();\n  }\n\n  const ret = {};\n\n  // Validates the user, returning a Promise that resolves to the validated user, or rejects if there is an error.\n  ret.validateUser = user => {\n    if (!user) {\n      return Promise.reject(new errors.LDInvalidUserError(messages.userNotSpecified()));\n    }\n\n    const userOut = utils.clone(user);\n    if (userOut.key !== null && userOut.key !== undefined) {\n      userOut.key = userOut.key.toString();\n      return Promise.resolve(userOut);\n    }\n    if (userOut.anonymous) {\n      return getCachedUserId().then(cachedId => {\n        if (cachedId) {\n          userOut.key = cachedId;\n          return userOut;\n        } else {\n          const id = uuidv1();\n          userOut.key = id;\n          return setCachedUserId(id).then(() => userOut);\n        }\n      });\n    } else {\n      return Promise.reject(new errors.LDInvalidUserError(messages.invalidUser()));\n    }\n  };\n\n  return ret;\n}\n","import * as errors from './errors';\nimport * as messages from './messages';\nimport * as utils from './utils';\n\n// baseOptionDefs should contain an entry for each supported configuration option in the common package.\n// Each entry can have three properties:\n// - \"default\": the default value if any\n// - \"type\": a type constraint used if the type can't be inferred from the default value). The allowable\n//   values are \"boolean\", \"string\", \"number\", \"array\", \"object\", \"function\", or several of these OR'd\n//   together with \"|\" (\"function|object\").\n// - \"minimum\": minimum value if any for numeric properties\n//\n// The extraOptionDefs parameter to validate() uses the same format.\nexport const baseOptionDefs = {\n  baseUrl: { default: 'https://app.launchdarkly.com' },\n  streamUrl: { default: 'https://clientstream.launchdarkly.com' },\n  eventsUrl: { default: 'https://events.launchdarkly.com' },\n  sendEvents: { default: true },\n  streaming: { type: 'boolean' }, // default for this is undefined, which is different from false\n  sendLDHeaders: { default: true },\n  inlineUsersInEvents: { default: false },\n  allowFrequentDuplicateEvents: { default: false },\n  sendEventsOnlyForVariation: { default: false },\n  useReport: { default: false },\n  evaluationReasons: { default: false },\n  eventCapacity: { default: 100, minimum: 1 },\n  flushInterval: { default: 2000, minimum: 2000 },\n  samplingInterval: { default: 0, minimum: 0 },\n  streamReconnectDelay: { default: 1000, minimum: 0 },\n  allAttributesPrivate: { default: false },\n  privateAttributeNames: { default: [] },\n  bootstrap: { type: 'string|object' },\n  diagnosticRecordingInterval: { default: 900000, minimum: 2000 },\n  diagnosticOptOut: { default: false },\n  wrapperName: { type: 'string' },\n  wrapperVersion: { type: 'string' },\n  stateProvider: { type: 'object' }, // not a public option, used internally\n};\n\nexport function validate(options, emitter, extraOptionDefs, logger) {\n  const optionDefs = utils.extend({ logger: { default: logger } }, baseOptionDefs, extraOptionDefs);\n\n  const deprecatedOptions = {\n    // eslint-disable-next-line camelcase\n    all_attributes_private: 'allAttributesPrivate',\n    // eslint-disable-next-line camelcase\n    private_attribute_names: 'privateAttributeNames',\n    samplingInterval: null,\n  };\n\n  function checkDeprecatedOptions(config) {\n    const opts = config;\n    Object.keys(deprecatedOptions).forEach(oldName => {\n      if (opts[oldName] !== undefined) {\n        const newName = deprecatedOptions[oldName];\n        logger && logger.warn(messages.deprecated(oldName, newName));\n        if (newName) {\n          if (opts[newName] === undefined) {\n            opts[newName] = opts[oldName];\n          }\n          delete opts[oldName];\n        }\n      }\n    });\n  }\n\n  function applyDefaults(config) {\n    // This works differently from utils.extend() in that it *will not* override a default value\n    // if the provided value is explicitly set to null. This provides backward compatibility\n    // since in the past we only used the provided values if they were truthy.\n    const ret = utils.extend({}, config);\n    Object.keys(optionDefs).forEach(name => {\n      if (ret[name] === undefined || ret[name] === null) {\n        ret[name] = optionDefs[name] && optionDefs[name].default;\n      }\n    });\n    return ret;\n  }\n\n  function validateTypesAndNames(config) {\n    const ret = utils.extend({}, config);\n    const typeDescForValue = value => {\n      if (value === null) {\n        return 'any';\n      }\n      if (value === undefined) {\n        return undefined;\n      }\n      if (Array.isArray(value)) {\n        return 'array';\n      }\n      const t = typeof value;\n      if (t === 'boolean' || t === 'string' || t === 'number' || t === 'function') {\n        return t;\n      }\n      return 'object';\n    };\n    Object.keys(config).forEach(name => {\n      const value = config[name];\n      if (value !== null && value !== undefined) {\n        const optionDef = optionDefs[name];\n        if (optionDef === undefined) {\n          reportArgumentError(messages.unknownOption(name));\n        } else {\n          const expectedType = optionDef.type || typeDescForValue(optionDef.default);\n          if (expectedType !== 'any') {\n            const allowedTypes = expectedType.split('|');\n            const actualType = typeDescForValue(value);\n            if (allowedTypes.indexOf(actualType) < 0) {\n              if (expectedType === 'boolean') {\n                ret[name] = !!value;\n                reportArgumentError(messages.wrongOptionTypeBoolean(name, actualType));\n              } else {\n                reportArgumentError(messages.wrongOptionType(name, expectedType, actualType));\n                ret[name] = optionDef.default;\n              }\n            } else {\n              if (actualType === 'number' && optionDef.minimum !== undefined && value < optionDef.minimum) {\n                reportArgumentError(messages.optionBelowMinimum(name, value, optionDef.minimum));\n                ret[name] = optionDef.minimum;\n              }\n            }\n          }\n        }\n      }\n    });\n    return ret;\n  }\n\n  function reportArgumentError(message) {\n    utils.onNextTick(() => {\n      emitter && emitter.maybeReportError(new errors.LDInvalidArgumentError(message));\n    });\n  }\n\n  let config = utils.extend({}, options || {});\n\n  checkDeprecatedOptions(config);\n\n  config = applyDefaults(config);\n  config = validateTypesAndNames(config);\n\n  return config;\n}\n","const uuidv1 = require('uuid/v1');\n// Note that in the diagnostic events spec, these IDs are to be generated with UUID v4. However,\n// in JS we were already using v1 for unique user keys, so to avoid bringing in two packages we\n// will use v1 here as well.\n\nconst { baseOptionDefs } = require('./configuration');\nconst messages = require('./messages');\n\nfunction DiagnosticId(sdkKey) {\n  const ret = {\n    diagnosticId: uuidv1(),\n  };\n  if (sdkKey) {\n    ret.sdkKeySuffix = sdkKey.length > 6 ? sdkKey.substring(sdkKey.length - 6) : sdkKey;\n  }\n  return ret;\n}\n\n// A stateful object holding statistics that will go into diagnostic events.\n\nfunction DiagnosticsAccumulator(startTime) {\n  let dataSinceDate, droppedEvents, eventsInLastBatch, streamInits;\n\n  function reset(time) {\n    dataSinceDate = time;\n    droppedEvents = 0;\n    eventsInLastBatch = 0;\n    streamInits = [];\n  }\n\n  reset(startTime);\n\n  return {\n    getProps: () => ({\n      dataSinceDate,\n      droppedEvents,\n      eventsInLastBatch,\n      streamInits,\n      // omit deduplicatedUsers for the JS SDKs because they don't deduplicate users\n    }),\n    setProps: props => {\n      dataSinceDate = props.dataSinceDate;\n      droppedEvents = props.droppedEvents || 0;\n      eventsInLastBatch = props.eventsInLastBatch || 0;\n      streamInits = props.streamInits || [];\n    },\n    incrementDroppedEvents: () => {\n      droppedEvents++;\n    },\n    setEventsInLastBatch: n => {\n      eventsInLastBatch = n;\n    },\n    recordStreamInit: (timestamp, failed, durationMillis) => {\n      const info = { timestamp, failed, durationMillis };\n      streamInits.push(info);\n    },\n    reset,\n  };\n}\n\n// An object that maintains information that will go into diagnostic events, and knows how to format\n// those events. It is instantiated by the SDK client, and shared with the event processor.\n//\n// The JS-based SDKs have two modes for diagnostic events. By default, the behavior is basically the\n// same as the server-side SDKs: a \"diagnostic-init\" event is sent on startup, and then \"diagnostic\"\n// events with operating statistics are sent periodically. However, in a browser environment this is\n// undesirable because the page may be reloaded frequently. In that case, setting the property\n// \"platform.diagnosticUseCombinedEvent\" to true enables an alternate mode in which a combination of\n// both kinds of event is sent at intervals, relative to the last time this was done (if any) which\n// is cached in local storage.\n\nfunction DiagnosticsManager(platform, accumulator, eventSender, environmentId, config, diagnosticId) {\n  const combinedMode = !!platform.diagnosticUseCombinedEvent;\n  const localStorageKey = 'ld:' + environmentId + ':$diagnostics';\n  const diagnosticEventsUrl = config.eventsUrl + '/events/diagnostic/' + environmentId;\n  const periodicInterval = config.diagnosticRecordingInterval;\n  const acc = accumulator;\n  const initialEventSamplingInterval = 4; // used only in combined mode - see start()\n  let streamingEnabled = !!config.streaming;\n  let eventSentTime;\n  let periodicTimer;\n  const manager = {};\n\n  function makeInitProperties() {\n    return {\n      sdk: makeSdkData(),\n      configuration: makeConfigData(),\n      platform: platform.diagnosticPlatformData,\n    };\n  }\n\n  // Send a diagnostic event and do not wait for completion.\n  function sendDiagnosticEvent(event) {\n    config.logger && config.logger.debug(messages.debugPostingDiagnosticEvent(event));\n    eventSender\n      .sendEvents(event, diagnosticEventsUrl, true)\n      .then(() => undefined)\n      .catch(() => undefined);\n  }\n\n  function loadProperties(callback) {\n    if (!platform.localStorage) {\n      return callback(false); // false indicates that local storage is not available\n    }\n    platform.localStorage\n      .get(localStorageKey)\n      .then(data => {\n        if (data) {\n          try {\n            const props = JSON.parse(data);\n            acc.setProps(props);\n            eventSentTime = props.dataSinceDate;\n          } catch (e) {\n            // disregard malformed cached data\n          }\n        }\n        callback(true);\n      })\n      .catch(() => {\n        callback(false);\n      });\n  }\n\n  function saveProperties() {\n    if (platform.localStorage) {\n      const props = { ...acc.getProps() };\n      platform.localStorage.set(localStorageKey, JSON.stringify(props), () => {});\n    }\n  }\n\n  // Creates the initial event that is sent by the event processor when the SDK starts up. This will not\n  // be repeated during the lifetime of the SDK client. In combined mode, we don't send this.\n  function createInitEvent() {\n    return {\n      kind: 'diagnostic-init',\n      id: diagnosticId,\n      creationDate: acc.getProps().dataSinceDate,\n      ...makeInitProperties(),\n    };\n  }\n\n  // Creates a periodic event containing time-dependent stats, and resets the state of the manager with\n  // regard to those stats. In combined mode (browser SDK) this also contains the configuration data.\n  function createPeriodicEventAndReset() {\n    const currentTime = new Date().getTime();\n    let ret = {\n      kind: combinedMode ? 'diagnostic-combined' : 'diagnostic',\n      id: diagnosticId,\n      creationDate: currentTime,\n      ...acc.getProps(),\n    };\n    if (combinedMode) {\n      ret = { ...ret, ...makeInitProperties() };\n    }\n    acc.reset(currentTime);\n    return ret;\n  }\n\n  function sendPeriodicEvent() {\n    sendDiagnosticEvent(createPeriodicEventAndReset());\n    periodicTimer = setTimeout(sendPeriodicEvent, periodicInterval);\n    eventSentTime = new Date().getTime();\n    if (combinedMode) {\n      saveProperties();\n    }\n  }\n\n  function makeSdkData() {\n    const sdkData = { ...platform.diagnosticSdkData };\n    if (config.wrapperName) {\n      sdkData.wrapperName = config.wrapperName;\n    }\n    if (config.wrapperVersion) {\n      sdkData.wrapperVersion = config.wrapperVersion;\n    }\n    return sdkData;\n  }\n\n  function makeConfigData() {\n    const configData = {\n      customBaseURI: config.baseUrl !== baseOptionDefs.baseUrl.default,\n      customStreamURI: config.streamUrl !== baseOptionDefs.streamUrl.default,\n      customEventsURI: config.eventsUrl !== baseOptionDefs.eventsUrl.default,\n      eventsCapacity: config.eventCapacity,\n      eventsFlushIntervalMillis: config.flushInterval,\n      reconnectTimeMillis: config.streamReconnectDelay,\n      streamingDisabled: !streamingEnabled,\n      allAttributesPrivate: !!config.allAttributesPrivate,\n      inlineUsersInEvents: !!config.inlineUsersInEvents,\n      diagnosticRecordingIntervalMillis: config.diagnosticRecordingInterval,\n      // The following extra properties are only provided by client-side JS SDKs:\n      usingSecureMode: !!config.hash,\n      bootstrapMode: !!config.bootstrap,\n      fetchGoalsDisabled: !config.fetchGoals,\n      allowFrequentDuplicateEvents: !!config.allowFrequentDuplicateEvents,\n      sendEventsOnlyForVariation: !!config.sendEventsOnlyForVariation,\n    };\n    // Client-side JS SDKs do not have the following properties which other SDKs have:\n    // connectTimeoutMillis\n    // pollingIntervalMillis\n    // samplingInterval\n    // socketTimeoutMillis\n    // startWaitMillis\n    // userKeysCapacity\n    // userKeysFlushIntervalMillis\n    // usingProxy\n    // usingProxyAuthenticator\n    // usingRelayDaemon\n\n    return configData;\n  }\n\n  // Called when the SDK is starting up. Either send an init event immediately, or, in the alternate\n  // mode, check for cached local storage properties and send an event only if we haven't done so\n  // recently.\n  manager.start = () => {\n    if (combinedMode) {\n      loadProperties(localStorageAvailable => {\n        if (localStorageAvailable) {\n          const nextEventTime = (eventSentTime || 0) + periodicInterval;\n          const timeNow = new Date().getTime();\n          if (timeNow >= nextEventTime) {\n            sendPeriodicEvent();\n          } else {\n            periodicTimer = setTimeout(sendPeriodicEvent, nextEventTime - timeNow);\n          }\n        } else {\n          // We don't have the ability to cache anything in local storage, so we don't know if we\n          // recently sent an event before this page load, but we would still prefer not to send one\n          // on *every* page load. So, as a rough heuristic, we'll decide semi-randomly.\n          if (Math.floor(Math.random() * initialEventSamplingInterval) === 0) {\n            sendPeriodicEvent();\n          } else {\n            periodicTimer = setTimeout(sendPeriodicEvent, periodicInterval);\n          }\n        }\n      });\n    } else {\n      sendDiagnosticEvent(createInitEvent());\n      periodicTimer = setTimeout(sendPeriodicEvent, periodicInterval);\n    }\n  };\n\n  manager.stop = () => {\n    periodicTimer && clearTimeout(periodicTimer);\n  };\n\n  // Called when streaming mode is turned on or off dynamically.\n  manager.setStreaming = enabled => {\n    streamingEnabled = enabled;\n  };\n\n  return manager;\n}\n\nmodule.exports = {\n  DiagnosticId,\n  DiagnosticsAccumulator,\n  DiagnosticsManager,\n};\n","// Default implementation of our internal logging interface, which writes messages to the console.\n// If no minimum level is specified, all messages will be logged. Setting the level to \"none\"\n// disables all logging.\n\nexport default function createConsoleLogger(level, maybePrefix) {\n  const allLevels = ['debug', 'info', 'warn', 'error'];\n  let prefix;\n  if (maybePrefix !== null && maybePrefix !== undefined) {\n    prefix = maybePrefix === '' ? '' : maybePrefix + ' ';\n  } else {\n    prefix = 'LD: ';\n  }\n  let minLevelIndex = 0;\n  if (level) {\n    if (level === 'none') {\n      minLevelIndex = 100;\n    } else {\n      minLevelIndex = allLevels.indexOf(level);\n    }\n  }\n\n  const logger = {};\n\n  function log(levelIndex, outputFn, msg) {\n    if (levelIndex >= minLevelIndex) {\n      const levelName = levelIndex < allLevels.length ? allLevels[levelIndex] : '?';\n      outputFn(prefix + '[' + levelName + '] ' + msg);\n    }\n  }\n\n  logger.debug = msg => log(0, console.log, msg); // eslint-disable-line no-console\n  logger.info = msg => log(1, console.info, msg); // eslint-disable-line no-console\n  logger.warn = msg => log(2, console.warn, msg); // eslint-disable-line no-console\n  logger.error = msg => log(3, console.error, msg); // eslint-disable-line no-console\n\n  return logger;\n}\n","import EventProcessor from './EventProcessor';\nimport EventEmitter from './EventEmitter';\nimport EventSender from './EventSender';\nimport Store from './Store';\nimport Stream from './Stream';\nimport Requestor from './Requestor';\nimport Identity from './Identity';\nimport UserValidator from './UserValidator';\nimport * as configuration from './configuration';\nimport * as diagnostics from './diagnosticEvents';\nimport createConsoleLogger from './consoleLogger';\nimport * as utils from './utils';\nimport * as errors from './errors';\nimport * as messages from './messages';\n\nconst readyEvent = 'ready';\nconst successEvent = 'initialized';\nconst failedEvent = 'failed';\nconst changeEvent = 'change';\nconst internalChangeEvent = 'internal-change';\n\n// This is called by the per-platform initialize functions to create the base client object that we\n// may also extend with additional behavior. It returns an object with these properties:\n//   client: the actual client object\n//   options: the configuration (after any appropriate defaults have been applied)\n// If we need to give the platform-specific clients access to any internals here, we should add those\n// as properties of the return object, not public properties of the client.\n//\n// For definitions of the API in the platform object, see stubPlatform.js in the test code.\n\nexport function initialize(env, user, specifiedOptions, platform, extraOptionDefs) {\n  const logger = createLogger();\n  const emitter = EventEmitter(logger);\n  const options = configuration.validate(specifiedOptions, emitter, extraOptionDefs, logger);\n  const sendEvents = options.sendEvents;\n  let environment = env;\n  let hash = options.hash;\n\n  const eventSender = EventSender(platform, environment, options);\n\n  const diagnosticsEnabled = options.sendEvents && !options.diagnosticOptOut;\n  const diagnosticId = diagnosticsEnabled ? diagnostics.DiagnosticId(environment) : null;\n  const diagnosticsAccumulator = diagnosticsEnabled ? diagnostics.DiagnosticsAccumulator(new Date().getTime()) : null;\n  const diagnosticsManager = diagnosticsEnabled\n    ? diagnostics.DiagnosticsManager(platform, diagnosticsAccumulator, eventSender, environment, options, diagnosticId)\n    : null;\n  if (diagnosticsManager) {\n    diagnosticsManager.start();\n  }\n\n  const stream = Stream(platform, options, environment, diagnosticsAccumulator);\n\n  const events =\n    options.eventProcessor ||\n    EventProcessor(platform, options, environment, diagnosticsAccumulator, emitter, eventSender);\n\n  const requestor = Requestor(platform, options, environment);\n\n  const seenRequests = {};\n  let flags = {};\n  let useLocalStorage;\n  let streamActive;\n  let streamForcedState = options.streaming;\n  let subscribedToChangeEvents;\n  let inited = false;\n  let closed = false;\n  let firstEvent = true;\n\n  // The \"stateProvider\" object is used in the Electron SDK, to allow one client instance to take partial\n  // control of another. If present, it has the following contract:\n  // - getInitialState() returns the initial client state if it is already available. The state is an\n  //   object whose properties are \"environment\", \"user\", and \"flags\".\n  // - on(\"init\", listener) triggers an event when the initial client state becomes available, passing\n  //   the state object to the listener.\n  // - on(\"update\", listener) triggers an event when flag values change and/or the current user changes.\n  //   The parameter is an object that *may* contain \"user\" and/or \"flags\".\n  // - enqueueEvent(event) accepts an analytics event object and returns true if the stateProvider will\n  //   be responsible for delivering it, or false if we still should deliver it ourselves.\n  const stateProvider = options.stateProvider;\n\n  const ident = Identity(null, sendIdentifyEvent);\n  const userValidator = UserValidator(platform.localStorage, logger);\n  let store;\n  if (platform.localStorage) {\n    store = new Store(platform.localStorage, environment, hash, ident, logger);\n  }\n\n  function createLogger() {\n    if (specifiedOptions && specifiedOptions.logger) {\n      return specifiedOptions.logger;\n    }\n    return (extraOptionDefs && extraOptionDefs.logger && extraOptionDefs.logger.default) || createConsoleLogger('warn');\n  }\n\n  function readFlagsFromBootstrap(data) {\n    // If the bootstrap data came from an older server-side SDK, we'll have just a map of keys to values.\n    // Newer SDKs that have an allFlagsState method will provide an extra \"$flagsState\" key that contains\n    // the rest of the metadata we want. We do it this way for backward compatibility with older JS SDKs.\n    const keys = Object.keys(data);\n    const metadataKey = '$flagsState';\n    const validKey = '$valid';\n    const metadata = data[metadataKey];\n    if (!metadata && keys.length) {\n      logger.warn(messages.bootstrapOldFormat());\n    }\n    if (data[validKey] === false) {\n      logger.warn(messages.bootstrapInvalid());\n    }\n    const ret = {};\n    keys.forEach(key => {\n      if (key !== metadataKey && key !== validKey) {\n        let flag = { value: data[key] };\n        if (metadata && metadata[key]) {\n          flag = utils.extend(flag, metadata[key]);\n        } else {\n          flag.version = 0;\n        }\n        ret[key] = flag;\n      }\n    });\n    return ret;\n  }\n\n  function shouldEnqueueEvent() {\n    return sendEvents && !closed && !platform.isDoNotTrack();\n  }\n\n  function enqueueEvent(event) {\n    if (!environment) {\n      // We're in paired mode and haven't been initialized with an environment or user yet\n      return;\n    }\n    if (stateProvider && stateProvider.enqueueEvent && stateProvider.enqueueEvent(event)) {\n      return; // it'll be handled elsewhere\n    }\n    if (!event.user) {\n      if (firstEvent) {\n        logger.warn(messages.eventWithoutUser());\n        firstEvent = false;\n      }\n      return;\n    }\n    firstEvent = false;\n    if (shouldEnqueueEvent()) {\n      logger.debug(messages.debugEnqueueingEvent(event.kind));\n      events.enqueue(event);\n    }\n  }\n\n  function sendIdentifyEvent(user) {\n    if (stateProvider) {\n      // In paired mode, the other client is responsible for sending identify events\n      return;\n    }\n    if (user) {\n      enqueueEvent({\n        kind: 'identify',\n        key: user.key,\n        user: user,\n        creationDate: new Date().getTime(),\n      });\n    }\n  }\n\n  function sendFlagEvent(key, detail, defaultValue, includeReason) {\n    const user = ident.getUser();\n    const now = new Date();\n    const value = detail ? detail.value : null;\n    if (!options.allowFrequentDuplicateEvents) {\n      const cacheKey = JSON.stringify(value) + (user && user.key ? user.key : '') + key; // see below\n      const cached = seenRequests[cacheKey];\n      // cache TTL is five minutes\n      if (cached && now - cached < 300000) {\n        return;\n      }\n      seenRequests[cacheKey] = now;\n    }\n\n    const event = {\n      kind: 'feature',\n      key: key,\n      user: user,\n      value: value,\n      variation: detail ? detail.variationIndex : null,\n      default: defaultValue,\n      creationDate: now.getTime(),\n    };\n    const flag = flags[key];\n    if (flag) {\n      event.version = flag.flagVersion ? flag.flagVersion : flag.version;\n      event.trackEvents = flag.trackEvents;\n      event.debugEventsUntilDate = flag.debugEventsUntilDate;\n    }\n    if ((includeReason || (flag && flag.trackReason)) && detail) {\n      event.reason = detail.reason;\n    }\n\n    enqueueEvent(event);\n  }\n\n  function identify(user, newHash, onDone) {\n    if (closed) {\n      return utils.wrapPromiseCallback(Promise.resolve({}), onDone);\n    }\n    if (stateProvider) {\n      // We're being controlled by another client instance, so only that instance is allowed to change the user\n      logger.warn(messages.identifyDisabled());\n      return utils.wrapPromiseCallback(Promise.resolve(utils.transformVersionedValuesToValues(flags)), onDone);\n    }\n    const clearFirst = useLocalStorage && store ? store.clearFlags() : Promise.resolve();\n    return utils.wrapPromiseCallback(\n      clearFirst\n        .then(() => userValidator.validateUser(user))\n        .then(realUser =>\n          requestor\n            .fetchFlagSettings(realUser, newHash)\n            // the following then() is nested within this one so we can use realUser from the previous closure\n            .then(requestedFlags => {\n              const flagValueMap = utils.transformVersionedValuesToValues(requestedFlags);\n              ident.setUser(realUser);\n              hash = newHash;\n              if (requestedFlags) {\n                return replaceAllFlags(requestedFlags).then(() => flagValueMap);\n              } else {\n                return flagValueMap;\n              }\n            })\n        )\n        .then(flagValueMap => {\n          if (streamActive) {\n            connectStream();\n          }\n          return flagValueMap;\n        })\n        .catch(err => {\n          emitter.maybeReportError(err);\n          return Promise.reject(err);\n        }),\n      onDone\n    );\n  }\n\n  function getUser() {\n    return ident.getUser();\n  }\n\n  function flush(onDone) {\n    return utils.wrapPromiseCallback(sendEvents ? events.flush() : Promise.resolve(), onDone);\n  }\n\n  function variation(key, defaultValue) {\n    return variationDetailInternal(key, defaultValue, true, false).value;\n  }\n\n  function variationDetail(key, defaultValue) {\n    return variationDetailInternal(key, defaultValue, true, true);\n  }\n\n  function variationDetailInternal(key, defaultValue, sendEvent, includeReasonInEvent) {\n    let detail;\n\n    if (flags && flags.hasOwnProperty(key) && flags[key] && !flags[key].deleted) {\n      const flag = flags[key];\n      detail = getFlagDetail(flag);\n      if (flag.value === null || flag.value === undefined) {\n        detail.value = defaultValue;\n      }\n    } else {\n      detail = { value: defaultValue, variationIndex: null, reason: { kind: 'ERROR', errorKind: 'FLAG_NOT_FOUND' } };\n    }\n\n    if (sendEvent) {\n      sendFlagEvent(key, detail, defaultValue, includeReasonInEvent);\n    }\n\n    return detail;\n  }\n\n  function getFlagDetail(flag) {\n    return {\n      value: flag.value,\n      variationIndex: flag.variation === undefined ? null : flag.variation,\n      reason: flag.reason || null,\n    };\n    // Note, the logic above ensures that variationIndex and reason will always be null rather than\n    // undefined if we don't have values for them. That's just to avoid subtle errors that depend on\n    // whether an object was JSON-encoded with null properties omitted or not.\n  }\n\n  function allFlags() {\n    const results = {};\n\n    if (!flags) {\n      return results;\n    }\n\n    for (const key in flags) {\n      if (flags.hasOwnProperty(key)) {\n        results[key] = variationDetailInternal(key, null, !options.sendEventsOnlyForVariation).value;\n      }\n    }\n\n    return results;\n  }\n\n  function track(key, data, metricValue) {\n    if (typeof key !== 'string') {\n      emitter.maybeReportError(new errors.LDInvalidEventKeyError(messages.unknownCustomEventKey(key)));\n      return;\n    }\n\n    if (platform.customEventFilter && !platform.customEventFilter(key)) {\n      logger.warn(messages.unknownCustomEventKey(key));\n    }\n\n    const e = {\n      kind: 'custom',\n      key: key,\n      user: ident.getUser(),\n      url: platform.getCurrentUrl(),\n      creationDate: new Date().getTime(),\n    };\n    // Note, check specifically for null/undefined because it is legal to set these fields to a falsey value.\n    if (data !== null && data !== undefined) {\n      e.data = data;\n    }\n    if (metricValue !== null && metricValue !== undefined) {\n      e.metricValue = metricValue;\n    }\n    enqueueEvent(e);\n  }\n\n  function connectStream() {\n    streamActive = true;\n    if (!ident.getUser()) {\n      return;\n    }\n    stream.connect(ident.getUser(), hash, {\n      ping: function() {\n        logger.debug(messages.debugStreamPing());\n        requestor\n          .fetchFlagSettings(ident.getUser(), hash)\n          .then(requestedFlags => replaceAllFlags(requestedFlags || {}))\n          .catch(err => {\n            emitter.maybeReportError(new errors.LDFlagFetchError(messages.errorFetchingFlags(err)));\n          });\n      },\n      put: function(e) {\n        const data = JSON.parse(e.data);\n        logger.debug(messages.debugStreamPut());\n        replaceAllFlags(data); // don't wait for this Promise to be resolved\n      },\n      patch: function(e) {\n        const data = JSON.parse(e.data);\n        // If both the flag and the patch have a version property, then the patch version must be\n        // greater than the flag version for us to accept the patch.  If either one has no version\n        // then the patch always succeeds.\n        const oldFlag = flags[data.key];\n        if (!oldFlag || !oldFlag.version || !data.version || oldFlag.version < data.version) {\n          logger.debug(messages.debugStreamPatch(data.key));\n          const mods = {};\n          const newFlag = utils.extend({}, data);\n          delete newFlag['key'];\n          flags[data.key] = newFlag;\n          const newDetail = getFlagDetail(newFlag);\n          if (oldFlag) {\n            mods[data.key] = { previous: oldFlag.value, current: newDetail };\n          } else {\n            mods[data.key] = { current: newDetail };\n          }\n          handleFlagChanges(mods); // don't wait for this Promise to be resolved\n        } else {\n          logger.debug(messages.debugStreamPatchIgnored(data.key));\n        }\n      },\n      delete: function(e) {\n        const data = JSON.parse(e.data);\n        if (!flags[data.key] || flags[data.key].version < data.version) {\n          logger.debug(messages.debugStreamDelete(data.key));\n          const mods = {};\n          if (flags[data.key] && !flags[data.key].deleted) {\n            mods[data.key] = { previous: flags[data.key].value };\n          }\n          flags[data.key] = { version: data.version, deleted: true };\n          handleFlagChanges(mods); // don't wait for this Promise to be resolved\n        } else {\n          logger.debug(messages.debugStreamDeleteIgnored(data.key));\n        }\n      },\n    });\n  }\n\n  function disconnectStream() {\n    if (streamActive) {\n      stream.disconnect();\n      streamActive = false;\n    }\n  }\n\n  // Returns a Promise which will be resolved when we have completely updated the internal flags state,\n  // dispatched all change events, and updated local storage if appropriate. This Promise is guaranteed\n  // never to have an unhandled rejection.\n  function replaceAllFlags(newFlags) {\n    const changes = {};\n\n    if (!newFlags) {\n      return Promise.resolve();\n    }\n\n    for (const key in flags) {\n      if (flags.hasOwnProperty(key) && flags[key]) {\n        if (newFlags[key] && !utils.deepEquals(newFlags[key].value, flags[key].value)) {\n          changes[key] = { previous: flags[key].value, current: getFlagDetail(newFlags[key]) };\n        } else if (!newFlags[key] || newFlags[key].deleted) {\n          changes[key] = { previous: flags[key].value };\n        }\n      }\n    }\n    for (const key in newFlags) {\n      if (newFlags.hasOwnProperty(key) && newFlags[key] && (!flags[key] || flags[key].deleted)) {\n        changes[key] = { current: getFlagDetail(newFlags[key]) };\n      }\n    }\n\n    flags = { ...newFlags };\n    return handleFlagChanges(changes).catch(() => {}); // swallow any exceptions from this Promise\n  }\n\n  // Returns a Promise which will be resolved when we have dispatched all change events and updated\n  // local storage if appropriate.\n  function handleFlagChanges(changes) {\n    const keys = Object.keys(changes);\n\n    if (keys.length > 0) {\n      const changeEventParams = {};\n      keys.forEach(key => {\n        const current = changes[key].current;\n        const value = current ? current.value : undefined;\n        const previous = changes[key].previous;\n        emitter.emit(changeEvent + ':' + key, value, previous);\n        changeEventParams[key] = current ? { current: value, previous: previous } : { previous: previous };\n      });\n\n      emitter.emit(changeEvent, changeEventParams);\n      emitter.emit(internalChangeEvent, flags);\n\n      // By default, we send feature evaluation events whenever we have received new flag values -\n      // the client has in effect evaluated these flags just by receiving them. This can be suppressed\n      // by setting \"sendEventsOnlyForVariation\". Also, if we have a stateProvider, we don't send these\n      // events because we assume they have already been sent by the other client that gave us the flags\n      // (when it received them in the first place).\n      if (!options.sendEventsOnlyForVariation && !stateProvider) {\n        keys.forEach(key => {\n          sendFlagEvent(key, changes[key].current);\n        });\n      }\n    }\n\n    if (useLocalStorage && store) {\n      return store.saveFlags(flags).catch(() => null); // disregard errors\n    } else {\n      return Promise.resolve();\n    }\n  }\n\n  function on(event, handler, context) {\n    if (isChangeEventKey(event)) {\n      subscribedToChangeEvents = true;\n      if (inited) {\n        updateStreamingState();\n      }\n      emitter.on(event, handler, context);\n    } else {\n      emitter.on(...arguments);\n    }\n  }\n\n  function off(event) {\n    emitter.off(...arguments);\n    if (isChangeEventKey(event)) {\n      let haveListeners = false;\n      emitter.getEvents().forEach(key => {\n        if (isChangeEventKey(key) && emitter.getEventListenerCount(key) > 0) {\n          haveListeners = true;\n        }\n      });\n      if (!haveListeners) {\n        subscribedToChangeEvents = false;\n        if (streamActive && streamForcedState === undefined) {\n          disconnectStream();\n        }\n      }\n    }\n  }\n\n  function setStreaming(state) {\n    const newState = state === null ? undefined : state;\n    if (newState !== streamForcedState) {\n      streamForcedState = newState;\n      updateStreamingState();\n    }\n  }\n\n  function updateStreamingState() {\n    const shouldBeStreaming = streamForcedState || (subscribedToChangeEvents && streamForcedState === undefined);\n    if (shouldBeStreaming && !streamActive) {\n      connectStream();\n    } else if (!shouldBeStreaming && streamActive) {\n      disconnectStream();\n    }\n    if (diagnosticsManager) {\n      diagnosticsManager.setStreaming(shouldBeStreaming);\n    }\n  }\n\n  function isChangeEventKey(event) {\n    return event === changeEvent || event.substr(0, changeEvent.length + 1) === changeEvent + ':';\n  }\n\n  const readyPromise = new Promise(resolve => {\n    const onReady = emitter.on(readyEvent, () => {\n      emitter.off(readyEvent, onReady);\n      resolve();\n    });\n  });\n\n  const initPromise = new Promise((resolve, reject) => {\n    const onSuccess = emitter.on(successEvent, () => {\n      emitter.off(successEvent, onSuccess);\n      resolve();\n    });\n    const onFailure = emitter.on(failedEvent, err => {\n      emitter.off(failedEvent, onFailure);\n      reject(err);\n    });\n  });\n\n  if (typeof options.bootstrap === 'string' && options.bootstrap.toUpperCase() === 'LOCALSTORAGE') {\n    if (store) {\n      useLocalStorage = true;\n    } else {\n      logger.warn(messages.localStorageUnavailable());\n    }\n  }\n\n  if (typeof options.bootstrap === 'object') {\n    // Set the flags as soon as possible before we get into any async code, so application code can read\n    // them even if the ready event has not yet fired.\n    flags = readFlagsFromBootstrap(options.bootstrap);\n  }\n\n  if (stateProvider) {\n    // The stateProvider option is used in the Electron SDK, to allow a client instance in the main process\n    // to control another client instance (i.e. this one) in the renderer process. We can't predict which\n    // one will start up first, so the initial state may already be available for us or we may have to wait\n    // to receive it.\n    const state = stateProvider.getInitialState();\n    if (state) {\n      initFromStateProvider(state);\n    } else {\n      stateProvider.on('init', initFromStateProvider);\n    }\n    stateProvider.on('update', updateFromStateProvider);\n  } else {\n    finishInit().catch(err => emitter.maybeReportError(err));\n  }\n\n  function finishInit() {\n    if (!env) {\n      return Promise.reject(new errors.LDInvalidEnvironmentIdError(messages.environmentNotSpecified()));\n    }\n    return userValidator.validateUser(user).then(realUser => {\n      ident.setUser(realUser);\n      if (typeof options.bootstrap === 'object') {\n        // flags have already been set earlier\n        return signalSuccessfulInit();\n      } else if (useLocalStorage) {\n        return finishInitWithLocalStorage();\n      } else {\n        return finishInitWithPolling();\n      }\n    });\n  }\n\n  function finishInitWithLocalStorage() {\n    return store\n      .loadFlags()\n      .catch(() => null) // treat an error the same as if no flags were available\n      .then(storedFlags => {\n        if (storedFlags === null || storedFlags === undefined) {\n          flags = {};\n          return requestor\n            .fetchFlagSettings(ident.getUser(), hash)\n            .then(requestedFlags => replaceAllFlags(requestedFlags || {}))\n            .then(signalSuccessfulInit)\n            .catch(err => {\n              const initErr = new errors.LDFlagFetchError(messages.errorFetchingFlags(err));\n              signalFailedInit(initErr);\n            });\n        } else {\n          // We're reading the flags from local storage. Signal that we're ready,\n          // then update localStorage for the next page load. We won't signal changes or update\n          // the in-memory flags unless you subscribe for changes\n          flags = storedFlags;\n          utils.onNextTick(signalSuccessfulInit);\n\n          return requestor\n            .fetchFlagSettings(ident.getUser(), hash)\n            .then(requestedFlags => replaceAllFlags(requestedFlags))\n            .catch(err => emitter.maybeReportError(err));\n        }\n      });\n  }\n\n  function finishInitWithPolling() {\n    return requestor\n      .fetchFlagSettings(ident.getUser(), hash)\n      .then(requestedFlags => {\n        flags = requestedFlags || {};\n        // Note, we don't need to call updateSettings here because local storage and change events are not relevant\n        signalSuccessfulInit();\n      })\n      .catch(err => {\n        flags = {};\n        signalFailedInit(err);\n      });\n  }\n\n  function initFromStateProvider(state) {\n    environment = state.environment;\n    ident.setUser(state.user);\n    flags = { ...state.flags };\n    utils.onNextTick(signalSuccessfulInit);\n  }\n\n  function updateFromStateProvider(state) {\n    if (state.user) {\n      ident.setUser(state.user);\n    }\n    if (state.flags) {\n      replaceAllFlags(state.flags); // don't wait for this Promise to be resolved\n    }\n  }\n\n  function signalSuccessfulInit() {\n    logger.info(messages.clientInitialized());\n    inited = true;\n    updateStreamingState();\n    emitter.emit(readyEvent);\n    emitter.emit(successEvent); // allows initPromise to distinguish between success and failure\n  }\n\n  function signalFailedInit(err) {\n    emitter.maybeReportError(err);\n    emitter.emit(failedEvent, err);\n    emitter.emit(readyEvent); // for backward compatibility, this event happens even on failure\n  }\n\n  function start() {\n    if (sendEvents) {\n      if (diagnosticsManager) {\n        diagnosticsManager.start();\n      }\n      events.start();\n    }\n  }\n\n  function close(onDone) {\n    if (closed) {\n      return utils.wrapPromiseCallback(Promise.resolve(), onDone);\n    }\n    const finishClose = () => {\n      closed = true;\n      flags = {};\n    };\n    const p = Promise.resolve()\n      .then(() => {\n        disconnectStream();\n        if (diagnosticsManager) {\n          diagnosticsManager.stop();\n        }\n        if (sendEvents) {\n          events.stop();\n          return events.flush();\n        }\n      })\n      .then(finishClose)\n      .catch(finishClose);\n    return utils.wrapPromiseCallback(p, onDone);\n  }\n\n  function getFlagsInternal() {\n    // used by Electron integration\n    return flags;\n  }\n\n  const client = {\n    waitForInitialization: () => initPromise,\n    waitUntilReady: () => readyPromise,\n    identify: identify,\n    getUser: getUser,\n    variation: variation,\n    variationDetail: variationDetail,\n    track: track,\n    on: on,\n    off: off,\n    setStreaming: setStreaming,\n    flush: flush,\n    allFlags: allFlags,\n    close: close,\n  };\n\n  return {\n    client: client, // The client object containing all public methods.\n    options: options, // The validated configuration object, including all defaults.\n    emitter: emitter, // The event emitter which can be used to log errors or trigger events.\n    ident: ident, // The Identity object that manages the current user.\n    logger: logger, // The logging abstraction.\n    requestor: requestor, // The Requestor object.\n    start: start, // Starts the client once the environment is ready.\n    enqueueEvent: enqueueEvent, // Puts an analytics event in the queue, if event sending is enabled.\n    getFlagsInternal: getFlagsInternal, // Returns flag data structure with all details.\n    getEnvironmentId: () => environment, // Gets the environment ID (this may have changed since initialization, if we have a state provider)\n    internalChangeEventName: internalChangeEvent, // This event is triggered whenever we have new flag state.\n  };\n}\n\nexport const version = VERSION;\nexport { createConsoleLogger };\nexport { errors };\nexport { messages };\nexport { utils };\n","import EventSender from './EventSender';\nimport EventSummarizer from './EventSummarizer';\nimport UserFilter from './UserFilter';\nimport * as errors from './errors';\nimport * as messages from './messages';\nimport * as utils from './utils';\n\nexport default function EventProcessor(\n  platform,\n  options,\n  environmentId,\n  diagnosticsAccumulator = null,\n  emitter = null,\n  sender = null\n) {\n  const processor = {};\n  const eventSender = sender || EventSender(platform, environmentId, options);\n  const mainEventsUrl = options.eventsUrl + '/events/bulk/' + environmentId;\n  const summarizer = EventSummarizer();\n  const userFilter = UserFilter(options);\n  const inlineUsers = options.inlineUsersInEvents;\n  const samplingInterval = options.samplingInterval;\n  const eventCapacity = options.eventCapacity;\n  const flushInterval = options.flushInterval;\n  const logger = options.logger;\n  let queue = [];\n  let lastKnownPastTime = 0;\n  let disabled = false;\n  let exceededCapacity = false;\n  let flushTimer;\n\n  function shouldSampleEvent() {\n    return samplingInterval === 0 || Math.floor(Math.random() * samplingInterval) === 0;\n  }\n\n  function shouldDebugEvent(e) {\n    if (e.debugEventsUntilDate) {\n      // The \"last known past time\" comes from the last HTTP response we got from the server.\n      // In case the client's time is set wrong, at least we know that any expiration date\n      // earlier than that point is definitely in the past.  If there's any discrepancy, we\n      // want to err on the side of cutting off event debugging sooner.\n      return e.debugEventsUntilDate > lastKnownPastTime && e.debugEventsUntilDate > new Date().getTime();\n    }\n    return false;\n  }\n\n  // Transform an event from its internal format to the format we use when sending a payload.\n  function makeOutputEvent(e) {\n    const ret = utils.extend({}, e);\n    if (inlineUsers || e.kind === 'identify') {\n      // identify events always have an inline user\n      ret.user = userFilter.filterUser(e.user);\n    } else {\n      ret.userKey = e.user.key;\n      delete ret['user'];\n    }\n    if (e.kind === 'feature') {\n      delete ret['trackEvents'];\n      delete ret['debugEventsUntilDate'];\n    }\n    return ret;\n  }\n\n  function addToOutbox(event) {\n    if (queue.length < eventCapacity) {\n      queue.push(event);\n      exceededCapacity = false;\n    } else {\n      if (!exceededCapacity) {\n        exceededCapacity = true;\n        logger.warn(messages.eventCapacityExceeded());\n      }\n      if (diagnosticsAccumulator) {\n        // For diagnostic events, we track how many times we had to drop an event due to exceeding the capacity.\n        diagnosticsAccumulator.incrementDroppedEvents();\n      }\n    }\n  }\n\n  processor.enqueue = function(event) {\n    if (disabled) {\n      return;\n    }\n    let addFullEvent = false;\n    let addDebugEvent = false;\n\n    // Add event to the summary counters if appropriate\n    summarizer.summarizeEvent(event);\n\n    // Decide whether to add the event to the payload. Feature events may be added twice, once for\n    // the event (if tracked) and once for debugging.\n    if (event.kind === 'feature') {\n      if (shouldSampleEvent()) {\n        addFullEvent = !!event.trackEvents;\n        addDebugEvent = shouldDebugEvent(event);\n      }\n    } else {\n      addFullEvent = shouldSampleEvent();\n    }\n\n    if (addFullEvent) {\n      addToOutbox(makeOutputEvent(event));\n    }\n    if (addDebugEvent) {\n      const debugEvent = utils.extend({}, event, { kind: 'debug' });\n      delete debugEvent['trackEvents'];\n      delete debugEvent['debugEventsUntilDate'];\n      delete debugEvent['variation'];\n      addToOutbox(debugEvent);\n    }\n  };\n\n  processor.flush = function() {\n    if (disabled) {\n      return Promise.resolve();\n    }\n    const eventsToSend = queue;\n    const summary = summarizer.getSummary();\n    summarizer.clearSummary();\n    if (summary) {\n      summary.kind = 'summary';\n      eventsToSend.push(summary);\n    }\n    if (diagnosticsAccumulator) {\n      // For diagnostic events, we record how many events were in the queue at the last flush (since \"how\n      // many events happened to be in the queue at the moment we decided to send a diagnostic event\" would\n      // not be a very useful statistic).\n      diagnosticsAccumulator.setEventsInLastBatch(eventsToSend.length);\n    }\n    if (eventsToSend.length === 0) {\n      return Promise.resolve();\n    }\n    queue = [];\n    logger.debug(messages.debugPostingEvents(eventsToSend.length));\n    return eventSender.sendEvents(eventsToSend, mainEventsUrl).then(responseInfo => {\n      if (responseInfo) {\n        if (responseInfo.serverTime) {\n          lastKnownPastTime = responseInfo.serverTime;\n        }\n        if (!errors.isHttpErrorRecoverable(responseInfo.status)) {\n          disabled = true;\n        }\n        if (responseInfo.status >= 400) {\n          utils.onNextTick(() => {\n            emitter.maybeReportError(\n              new errors.LDUnexpectedResponseError(\n                messages.httpErrorMessage(responseInfo.status, 'event posting', 'some events were dropped')\n              )\n            );\n          });\n        }\n      }\n    });\n  };\n\n  processor.start = function() {\n    const flushTick = () => {\n      processor.flush();\n      flushTimer = setTimeout(flushTick, flushInterval);\n    };\n    flushTimer = setTimeout(flushTick, flushInterval);\n  };\n\n  processor.stop = function() {\n    clearTimeout(flushTimer);\n  };\n\n  return processor;\n}\n","import * as utils from './utils';\n\nexport default function Identity(initialUser, onChange) {\n  const ident = {};\n  let user;\n\n  ident.setUser = function(u) {\n    user = utils.sanitizeUser(u);\n    if (user && onChange) {\n      onChange(utils.clone(user));\n    }\n  };\n\n  ident.getUser = function() {\n    return user ? utils.clone(user) : null;\n  };\n\n  if (initialUser) {\n    ident.setUser(initialUser);\n  }\n\n  return ident;\n}\n"],"names":["createCustomError","name","CustomError","message","code","Error","captureStackTrace","this","constructor","prototype","LDUnexpectedResponseError","LDInvalidEnvironmentIdError","LDInvalidUserError","LDInvalidEventKeyError","LDInvalidArgumentError","LDFlagFetchError","isHttpErrorRecoverable","status","uint8","tmp","len","length","extraBytes","parts","i","len2","push","encodeChunk","lookup","join","revLookup","charCodeAt","start","end","num","output","isArray","Array","keyList","Object","keys","hasProp","hasOwnProperty","userAttrsToStringify","btoa","s","escaped","unescape","encodeURIComponent","base64","b","stringToBytes","base64URLEncode","replace","clone","obj","JSON","parse","stringify","deepEquals","a","equal","key","arrA","arrB","dateA","Date","dateB","getTime","regexpA","RegExp","regexpB","toString","call","fastDeepEqual","onNextTick","cb","setTimeout","wrapPromiseCallback","promise","callback","ret","then","value","error","Promise","reject","undefined","transformValuesToVersionedValues","flags","version","transformVersionedValuesToValues","flagsState","chunkUserEventsForUrl","maxLength","events","chunk","allEvents","slice","allChunks","remainingSpace","event","shift","unshift","getLDUserAgentString","platform","userAgent","getLDHeaders","options","sendLDHeaders","h","wrapperName","wrapperVersion","extend","objects","reduce","acc","sanitizeUser","user","newUser","attr","String","getRandomValues","crypto","bind","window","msCrypto","rnds8","Uint8Array","module","rnds","r","Math","random","byteToHex","substr","_nodeId","_clockseq","buf","offset","bth","_lastMSecs","_lastNSecs","node","clockseq","seedBytes","rng","msecs","nsecs","dt","tl","tmh","n","bytesToUuid","EventSender","environmentId","imageUrlPath","baseHeaders","utils","httpFallbackPing","sender","sendChunk","url","isDiagnostic","usePost","jsonBody","payloadId","uuidv1","doPostRequest","canRetry","headers","httpRequest","result","errors","dateStr","header","time","serverTime","getResponseInfo","catch","resolve","sendEvents","chunks","canPost","httpAllowsPost","results","all","EventSummarizer","es","startDate","endDate","counters","summarizeEvent","kind","counterKey","variation","counterVal","count","default","creationDate","getSummary","flagsOut","empty","c","flag","counterOut","unknown","features","clearSummary","UserFilter","config","filter","allAttributesPrivate","privateAttributeNames","ignoreAttrs","custom","anonymous","allowedTopLevelAttrs","secondary","ip","country","email","firstName","lastName","avatar","filterUser","userPrivateAttrs","filterAttrs","props","isAttributeAllowed","indexOf","isPrivateAttr","filteredProps","removedAttrs","customResult","removedAttrNames","sort","privateAttrs","errorString","err","clientInitialized","docLink","eventCapacityExceeded","eventWithoutUser","invalidContentType","contentType","localStorageUnavailable","localStorageUnavailableForUserId","networkError","e","unknownCustomEventKey","environmentNotFound","environmentNotSpecified","errorFetchingFlags","userNotSpecified","invalidUser","bootstrapOldFormat","bootstrapInvalid","deprecated","oldName","newName","httpErrorMessage","context","retryMessage","httpUnavailable","identifyDisabled","streamClosing","streamConnecting","streamError","streamReconnectDelay","unknownOption","wrongOptionType","expectedType","actualType","wrongOptionTypeBoolean","optionBelowMinimum","minimum","debugPolling","debugStreamPing","debugStreamPut","debugStreamPatch","debugStreamPatchIgnored","debugStreamDelete","debugStreamDeleteIgnored","debugEnqueueingEvent","debugPostingEvents","EventEmitter","logger","emitter","on","handler","concat","off","emit","apply","arguments","getEvents","getEventListenerCount","maybeReportError","console","Store","localStorageProvider","environment","hash","ident","store","getFlagsKey","getUser","loadFlags","get","dataStr","data","schema","$schema","ex","clearFlags","warn","saveFlags","set","clear","Stream","diagnosticsAccumulator","connectionAttemptStartTime","baseUrl","streamUrl","stream","evalUrlPrefix","useReport","withReasons","evaluationReasons","firstConnectionErrorLogged","reconnectTimeoutReference","handlers","handleError","messages","logConnectionResult","closeConnection","tryConnect","delay","openConnection","query","eventSourceFactory","eventSourceAllowsReport","method","body","info","addEventListener","onerror","close","success","recordStreamInit","connect","newHash","newHandlers","disconnect","clearTimeout","isConnected","eventSourceIsActive","Requestor","requestor","activeRequests","fetchJSON","endpoint","coalescer","finallyFn","currentPromise","currentCancelFn","finalResolve","finalReject","p","cancelFn","resultPromise","promiseCoalescer","req","lastIndexOf","statusText","getResponseError","addPromise","cancel","path","fetchFlagSettings","debug","UserValidator","validateUser","userOut","cachedId","id","setCachedUserId","baseOptionDefs","eventsUrl","streaming","type","inlineUsersInEvents","allowFrequentDuplicateEvents","sendEventsOnlyForVariation","eventCapacity","flushInterval","samplingInterval","bootstrap","diagnosticRecordingInterval","diagnosticOptOut","stateProvider","validate","extraOptionDefs","optionDefs","deprecatedOptions","all_attributes_private","private_attribute_names","reportArgumentError","opts","forEach","checkDeprecatedOptions","typeDescForValue","t","optionDef","allowedTypes","split","validateTypesAndNames","applyDefaults","sdkKey","diagnosticId","sdkKeySuffix","substring","startTime","dataSinceDate","droppedEvents","eventsInLastBatch","streamInits","reset","getProps","setProps","incrementDroppedEvents","setEventsInLastBatch","timestamp","failed","durationMillis","accumulator","eventSender","eventSentTime","periodicTimer","combinedMode","diagnosticUseCombinedEvent","localStorageKey","diagnosticEventsUrl","periodicInterval","streamingEnabled","manager","makeInitProperties","sdk","makeSdkData","configuration","configData","customBaseURI","customStreamURI","customEventsURI","eventsCapacity","eventsFlushIntervalMillis","reconnectTimeMillis","streamingDisabled","diagnosticRecordingIntervalMillis","usingSecureMode","bootstrapMode","fetchGoalsDisabled","fetchGoals","diagnosticPlatformData","sendDiagnosticEvent","debugPostingDiagnosticEvent","sendPeriodicEvent","currentTime","localStorage","saveProperties","sdkData","diagnosticSdkData","loadProperties","localStorageAvailable","nextEventTime","timeNow","floor","stop","setStreaming","enabled","createConsoleLogger","level","maybePrefix","prefix","allLevels","minLevelIndex","log","levelIndex","outputFn","msg","levelName","initialize","env","specifiedOptions","createLogger","diagnosticsEnabled","diagnostics","diagnosticsManager","useLocalStorage","streamActive","subscribedToChangeEvents","eventProcessor","flushTimer","processor","mainEventsUrl","summarizer","userFilter","inlineUsers","queue","lastKnownPastTime","disabled","exceededCapacity","shouldSampleEvent","shouldDebugEvent","debugEventsUntilDate","makeOutputEvent","userKey","addToOutbox","enqueue","addFullEvent","addDebugEvent","trackEvents","debugEvent","flush","eventsToSend","summary","responseInfo","flushTick","EventProcessor","seenRequests","streamForcedState","inited","closed","firstEvent","initialUser","onChange","setUser","u","Identity","enqueueEvent","userValidator","isDoNotTrack","sendFlagEvent","detail","defaultValue","includeReason","now","cacheKey","cached","variationIndex","flagVersion","trackReason","reason","variationDetailInternal","sendEvent","includeReasonInEvent","deleted","getFlagDetail","errorKind","connectStream","ping","requestedFlags","replaceAllFlags","put","patch","oldFlag","mods","newFlag","newDetail","previous","current","handleFlagChanges","delete","disconnectStream","newFlags","changes","changeEventParams","changeEvent","updateStreamingState","shouldBeStreaming","isChangeEventKey","readyPromise","onReady","initPromise","onSuccess","onFailure","toUpperCase","_typeof","metadata","readFlagsFromBootstrap","state","getInitialState","initFromStateProvider","realUser","signalSuccessfulInit","storedFlags","signalFailedInit","finishInit","client","waitForInitialization","waitUntilReady","identify","onDone","flagValueMap","variationDetail","track","metricValue","customEventFilter","getCurrentUrl","haveListeners","newState","allFlags","finishClose","getFlagsInternal","getEnvironmentId","internalChangeEventName"],"mappings":"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"}